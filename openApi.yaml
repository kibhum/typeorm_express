openapi: 3.0.2
info:
  version: "1.0"
  title: todo api
  description: Some description
servers:
  - url: http://localhost:3000/
    description: development server

paths:
  /v1/tasks:
    get:
      tags:
        - Tasks
      summary: List tasks
      description: Get a list of tasks
      parameters:
        - name: pageNumber
          in: query
          description: Page Number
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Page Size
          required: false
          schema:
            type: integer
            format: int32
            default: 25
      responses:
        200:
          description: List of tasks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tasksList"
    post:
      tags:
        - Tasks
      summary: New Task
      description: Create A New task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/task"
      responses:
        201:
          description: Task created
          headers:
            location:
              description: Location to do the task
              schema:
                type: string
                format: uri
                example: http://example.com/v1/tasks/{assignedValue}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/task"
  /v1/tasks/{taskId}:
    get:
      tags:
        - Tasks
      summary: Task by id
      description: Get a task by ud
      parameters:
        - $ref: "#/components/parameters/taskIdPathParam"
      responses:
        200:
          description: Found Task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/task"
    put:
      tags:
        - Tasks
      summary: Update a Task
      description: Update task given an id
      parameters:
        - $ref: "#/components/parameters/taskIdPathParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/task"
      responses:
        200:
          description: Updated Task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/task"
components:
  schemas:
    taskDescription:
      type: string
      minLength: 2
      maxLength: 100
      example: to be perfectly clean
    task:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          minLength: 2
          maxLength: 100
          example: cleaning
        description:
          $ref: "#/components/schemas/taskDescription"
    tasksList:
      type: array
      description: list of tasks
      items:
        $ref: "#/components/schemas/task"

  parameters:
    taskIdPathParam:
      name: taskId
      in: path
      description: Task Id
      required: true
      schema:
        type: string
        format: uuid
